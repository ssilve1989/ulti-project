---
import { getPaginationState } from '../lib/utils/paginationUtils.js';

export interface Props {
  currentPage: number;
  totalPages: number;
  pageSize: number;
  baseUrl?: string;
}

const { currentPage, totalPages, pageSize, baseUrl = '/signups' } = Astro.props;

const { pages: pageNumbers, hasPrevious, hasNext, showFirstEllipsis, showLastEllipsis } = getPaginationState(currentPage, totalPages);
---

<div class="pagination-controls">
  <!-- First & Previous -->
  <a 
    href={hasPrevious ? `${baseUrl}?page=1&pageSize=${pageSize}` : '#'}
    class={`pagination-button ${!hasPrevious ? 'disabled' : ''}`}
    aria-label="First page"
    tabindex={!hasPrevious ? -1 : 0}
  >
    ⟪
  </a>
  <a 
    href={hasPrevious ? `${baseUrl}?page=${currentPage - 1}&pageSize=${pageSize}` : '#'}
    class={`pagination-button ${!hasPrevious ? 'disabled' : ''}`}
    aria-label="Previous page"
    tabindex={!hasPrevious ? -1 : 0}
  >
    ⟨
  </a>
  
  <!-- Page numbers and ellipsis -->
  {pageNumbers.map((pageNum) => (
    pageNum === '...' ? (
      <span class="pagination-ellipsis">...</span>
    ) : (
      <a 
        href={`${baseUrl}?page=${pageNum}&pageSize=${pageSize}`}
        class={`pagination-button ${pageNum === currentPage ? 'active' : ''}`}
        aria-current={pageNum === currentPage ? 'page' : undefined}
      >
        {pageNum}
      </a>
    )
  ))}
  
  <!-- Next & Last -->
  <a 
    href={hasNext ? `${baseUrl}?page=${currentPage + 1}&pageSize=${pageSize}` : '#'}
    class={`pagination-button ${!hasNext ? 'disabled' : ''}`}
    aria-label="Next page"
    tabindex={!hasNext ? -1 : 0}
  >
    ⟩
  </a>
  <a 
    href={hasNext ? `${baseUrl}?page=${totalPages}&pageSize=${pageSize}` : '#'}
    class={`pagination-button ${!hasNext ? 'disabled' : ''}`}
    aria-label="Last page"
    tabindex={!hasNext ? -1 : 0}
  >
    ⟫
  </a>
</div>

<style>
  .pagination-controls {
    display: flex;
    gap: 0.5rem;
    align-items: center;
  }
  
  .pagination-button {
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: 2.5rem;
    height: 2.5rem;
    padding: 0.5rem;
    background-color: var(--bg-secondary);
    border: 1px solid var(--border-primary);
    border-radius: 0.375rem;
    color: var(--text-secondary);
    text-decoration: none;
    font-size: 0.875rem;
    transition: all 0.2s ease;
  }
  
  .pagination-button:hover:not(.disabled) {
    background-color: var(--bg-tertiary);
    color: var(--text-primary);
  }
  
  .pagination-button.active {
    background-color: var(--bg-accent);
    color: var(--text-inverse);
    border-color: var(--bg-accent);
  }
  
  .pagination-button.disabled {
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none;
  }
  
  .pagination-ellipsis {
    padding: 0 0.5rem;
    color: var(--text-tertiary);
    user-select: none;
  }
  
  @media (max-width: 768px) {
    .pagination-controls {
      flex-wrap: wrap;
      justify-content: center;
    }
  }
</style> 
