---
import Layout from '../../layouts/Layout.astro';
import { getEvents } from '../../lib/schedulingApi.js';
import { getEventStatusColor } from '../../lib/utils/statusUtils.js';
import { formatSchedulingDate } from '../../lib/utils/uiUtils.js';

// Fetch events on the server
const events = await getEvents();

// Group events by status for better organization
const eventsByStatus = {
  draft: events.filter(e => e.status === 'draft'),
  published: events.filter(e => e.status === 'published'),
  'in-progress': events.filter(e => e.status === 'in-progress'),
  completed: events.filter(e => e.status === 'completed'),
};
---

<Layout title="Event Scheduling">
  <div class="min-h-screen grid grid-cols-[1fr_min(1200px,100%)_1fr] px-4 py-8">
    <div class="col-start-2">
      <!-- Header -->
      <div class="flex justify-between items-center mb-8">
        <div>
          <h1 class="text-3xl font-bold text-gray-900">Event Scheduling</h1>
          <p class="text-gray-600 mt-2">Manage your team events and rosters</p>
        </div>
        <a
          href="/scheduling/create"
          class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors"
        >
          Create New Event
        </a>
      </div>

      <!-- Events by Status -->
      {Object.entries(eventsByStatus).map(([status, statusEvents]) => (
        statusEvents.length > 0 && (
          <div class="mb-8">
            <h2 class="text-xl font-semibold text-gray-900 mb-4 capitalize">
              {status.replace('-', ' ')} Events ({statusEvents.length})
            </h2>
            
            <div class="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
              {statusEvents.map((event) => (
                <div class="bg-white rounded-lg border border-gray-200 p-6 hover:shadow-md transition-shadow">
                  <!-- Event Header -->
                  <div class="flex justify-between items-start mb-4">
                    <div>
                      <h3 class="font-semibold text-gray-900 text-lg">{event.name}</h3>
                      <p class="text-sm text-gray-600">{event.encounter}</p>
                    </div>
                    <span class={`px-2 py-1 rounded-full text-xs font-medium ${getEventStatusColor(event.status)}`}>
                      {event.status}
                    </span>
                  </div>

                  <!-- Event Details -->
                  <div class="space-y-2 mb-4">
                    <div class="flex items-center text-sm text-gray-600">
                      <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                      </svg>
                      {formatSchedulingDate(event.scheduledTime)}
                    </div>
                    
                    <div class="flex items-center text-sm text-gray-600">
                      <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                      </svg>
                      {event.duration} minutes
                    </div>

                    <div class="flex items-center text-sm text-gray-600">
                      <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                      </svg>
                      {event.teamLeaderName}
                    </div>
                  </div>

                  <!-- Roster Progress -->
                  <div class="mb-4">
                    <div class="flex justify-between text-sm text-gray-600 mb-1">
                      <span>Roster Progress</span>
                      <span>{event.roster.filledSlots}/{event.roster.totalSlots}</span>
                    </div>
                    <div class="w-full bg-gray-200 rounded-full h-2">
                      <div 
                        class="bg-blue-600 h-2 rounded-full transition-all"
                        style={`width: ${(event.roster.filledSlots / event.roster.totalSlots) * 100}%`}
                      ></div>
                    </div>
                  </div>

                  <!-- Actions -->
                  <div class="flex gap-2">
                    <a 
                      href={`/scheduling/${event.id}`}
                      class="flex-1 bg-gray-100 hover:bg-gray-200 text-gray-700 px-4 py-2 rounded text-center text-sm font-medium transition-colors"
                    >
                      {event.status === 'draft' ? 'Edit Roster' : 'View Details'}
                    </a>
                    
                    {event.status === 'draft' && (
                      <button 
                        class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded text-sm font-medium transition-colors"
                        onclick={`publishEvent('${event.id}')`}
                      >
                        Publish
                      </button>
                    )}
                  </div>
                </div>
              ))}
            </div>
          </div>
        )
      ))}

      <!-- Empty State -->
      {events.length === 0 && (
        <div class="text-center py-12">
          <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
          </svg>
          <h3 class="mt-2 text-sm font-medium text-gray-900">No events scheduled</h3>
          <p class="mt-1 text-sm text-gray-500">Get started by creating your first event.</p>
          <div class="mt-6">
            <a 
              href="/scheduling/create"
              class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700"
            >
              Create New Event
            </a>
          </div>
        </div>
      )}
    </div>
  </div>

  <!-- Simple JavaScript for publish action -->
  <script>
    function publishEvent(eventId: string) {
      // This will be enhanced later with proper API calls
      console.log('Publishing event:', eventId);
      alert('Event publishing will be implemented in the roster management page');
    }
  </script>
</Layout> 
